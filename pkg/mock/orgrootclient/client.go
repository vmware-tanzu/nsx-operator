// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vmware/vsphere-automation-sdk-go/services/nsxt (interfaces: OrgRootClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/vmware/vsphere-automation-sdk-go/services/nsxt/model"
)

// MockOrgRootClient is a mock of OrgRootClient interface.
type MockOrgRootClient struct {
	ctrl     *gomock.Controller
	recorder *MockOrgRootClientMockRecorder
}

// MockOrgRootClientMockRecorder is the mock recorder for MockOrgRootClient.
type MockOrgRootClientMockRecorder struct {
	mock *MockOrgRootClient
}

// NewMockOrgRootClient creates a new mock instance.
func NewMockOrgRootClient(ctrl *gomock.Controller) *MockOrgRootClient {
	mock := &MockOrgRootClient{ctrl: ctrl}
	mock.recorder = &MockOrgRootClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrgRootClient) EXPECT() *MockOrgRootClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockOrgRootClient) Get(arg0, arg1, arg2 *string) (model.OrgRoot, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2)
	ret0, _ := ret[0].(model.OrgRoot)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockOrgRootClientMockRecorder) Get(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockOrgRootClient)(nil).Get), arg0, arg1, arg2)
}

// Patch mocks base method.
func (m *MockOrgRootClient) Patch(arg0 model.OrgRoot, arg1 *bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Patch", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Patch indicates an expected call of Patch.
func (mr *MockOrgRootClientMockRecorder) Patch(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Patch", reflect.TypeOf((*MockOrgRootClient)(nil).Patch), arg0, arg1)
}
