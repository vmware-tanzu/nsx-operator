# DB
# first run
#  kubectl label ns db2 role=db
#  test: kubectl exec -ti web-ip -n web -- nc db-ip 3306 -v
#  kubectl exec -ti web-ip -n web -- nc db-ip 1234 -v
#  nc db-ip 1234 -v

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: db
  labels:
    role: db
spec:
  replicas: 1
  selector:
    matchLabels:
      role: db
  template:
    metadata:
      labels:
        deployment: mysql
        role: db
    spec:
      containers:
        - image: "netfvt-docker-local.packages.vcfd.broadcom.net:8080/wcp-docker-ci/gophernet/netcat:latest"
          command: ["nc", "-l", "-p", "3306"]
          name: mysql
          ports:
            - containerPort: 3306
              name: mysql-port
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql2
  namespace: db2
  labels:
    role: db
spec:
  replicas: 1
  selector:
    matchLabels:
      role: db
  template:
    metadata:
      labels:
        deployment: mysql2
        role: db
    spec:
      containers:
        - image: "netfvt-docker-local.packages.vcfd.broadcom.net:8080/wcp-docker-ci/gophernet/netcat:latest"
          command: ["nc", "-l", "-p", "1234"]
          name: mysql2
          ports:
            - containerPort: 1234
              name: mysql-port
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: tcp-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      role: web
  template:
    metadata:
      labels:
        deployment: tcp-deployment
        role: web
    spec:
      hostname: web-deployment
      containers:
        - image: "netfvt-docker-local.packages.vcfd.broadcom.net:8080/wcp-docker-ci/gophernet/netcat:latest"
          command: ["nc", "-l", "-p", "4321"]
          name: web
          imagePullPolicy: IfNotPresent
---
apiVersion: crd.nsx.vmware.com/v1alpha1
kind: SecurityPolicy
metadata:
  name: named-port-policy
  namespace: web
spec:
  priority: 10
  appliedTo:
    - podSelector:
        matchLabels:
          role: web
  rules:
    - direction: out
      action: allow
      appliedTo:
        - podSelector:
            matchLabels:
              role: web
      destinations:
        - podSelector:
            matchLabels:
              role: db
        - namespaceSelector:
            matchLabels:
              role: db
      ports:
        - protocol: TCP
          port: mysql-port

